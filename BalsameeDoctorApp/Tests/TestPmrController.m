//
//  BalsameeDoctorApp
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import <XCTest/XCTest.h>
#import "PmrController.h"
#import "TestHelper.h"
#import "TestBaseController.h"

@interface  TestPmrController : TestBaseController
//Controller instance for all tests
@property PmrController* controller;
@end 


@implementation  TestPmrController : TestBaseController

//Setup test class
//This method is called before the invocation of each test method in the test class
- (void)setUp {
    [super setUp];
    self.controller = [[PmrController alloc]init];
}

//Teardown test class
//This method is called after the invocation of each test method in the test class
- (void)tearDown {
    [super tearDown];
}	


// TODO: Add Description    
-(void) testCreateNewPrescription {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";
    NSString* prescriptionDate = @"2016-04-28";
    NSString* prescriptionPresDrugsAttributes0StartDate = @"2016-04-28";
    NSString* prescriptionPresDrugsAttributes0Num = @"3";
    NSString* prescriptionPresDrugsAttributes0Duration = @"days";
    NSString* prescriptionPresDrugsAttributes0DrugId = @"52839f9d8ad845bb51000088";
    NSString* prescriptionPresDrugsAttributes0Dose = @"90 gm";
    NSString* prescriptionPresDrugsAttributes0Notes = @"";
    NSString* prescriptionPresDrugsAttributes1461845708794StartDate = @"2016-04-28";
    NSString* prescriptionPresDrugsAttributes1461845708794Num = @"4";
    NSString* prescriptionPresDrugsAttributes1461845708794Duration = @"days";
    NSString* prescriptionPresDrugsAttributes1461845708794DrugId = @"52839f9d8ad845bb51000082";
    NSString* prescriptionPresDrugsAttributes1461845708794Dose = @"100";
    NSString* prescriptionPresDrugsAttributes1461845708794Destroy = @"false";

    // Set callback and perform API call
    [self.controller createNewPrescriptionAsyncWithXSessionId: xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId prescriptionDate : prescriptionDate prescriptionPresDrugsAttributes0StartDate : prescriptionPresDrugsAttributes0StartDate prescriptionPresDrugsAttributes0Num : prescriptionPresDrugsAttributes0Num prescriptionPresDrugsAttributes0Duration : prescriptionPresDrugsAttributes0Duration prescriptionPresDrugsAttributes0DrugId : prescriptionPresDrugsAttributes0DrugId prescriptionPresDrugsAttributes0Dose : prescriptionPresDrugsAttributes0Dose prescriptionPresDrugsAttributes0Notes : prescriptionPresDrugsAttributes0Notes prescriptionPresDrugsAttributes1461845708794StartDate : prescriptionPresDrugsAttributes1461845708794StartDate prescriptionPresDrugsAttributes1461845708794Num : prescriptionPresDrugsAttributes1461845708794Num prescriptionPresDrugsAttributes1461845708794Duration : prescriptionPresDrugsAttributes1461845708794Duration prescriptionPresDrugsAttributes1461845708794DrugId : prescriptionPresDrugsAttributes1461845708794DrugId prescriptionPresDrugsAttributes1461845708794Dose : prescriptionPresDrugsAttributes1461845708794Dose prescriptionPresDrugsAttributes1461845708794Destroy : prescriptionPresDrugsAttributes1461845708794Destroy  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testUploadLabRequestImageGroupForReservationRequest {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";
    NSString* labRequestImageImage = @"";

    // Set callback and perform API call
    [self.controller uploadLabRequestImageGroupForReservationRequestAsyncWithXSessionId: xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId labRequestImageImage : labRequestImageImage  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testUploadLabRequestImageFileForReservationRequest {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";
    NSString* labRequestImageImage = @"";

    // Set callback and perform API call
    [self.controller uploadLabRequestImageFileForReservationRequestAsyncWithXSessionId: xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId labRequestImageImage : labRequestImageImage  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testUploadPrescriptionImageGroupFileForReservationRequest {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";
    NSString* prescriptionImagesGroupPrescriptionImagesAttributesImage = @"";

    // Set callback and perform API call
    [self.controller uploadPrescriptionImageGroupFileForReservationRequestAsyncWithXSessionId: xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId prescriptionImagesGroupPrescriptionImagesAttributesImage : prescriptionImagesGroupPrescriptionImagesAttributesImage  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testUploadPrescriptionImageFileForReservationRequest {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";
    NSString* prescriptionImageImage = @"";

    // Set callback and perform API call
    [self.controller uploadPrescriptionImageFileForReservationRequestAsyncWithXSessionId: xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId prescriptionImageImage : prescriptionImageImage  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testCreateRadiologyRequest {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";
    NSString* reservationRequestId = @"3";
    NSString* radiologyRequestRadiologyScan = @"[800,807,814]";

    // Set callback and perform API call
    [self.controller createRadiologyRequestAsyncWithXSessionId: xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId reservationRequestId : reservationRequestId radiologyRequestRadiologyScan : radiologyRequestRadiologyScan  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testCreateLabRequest {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";
    NSString* reservationRequestId = @"3750";
    NSString* labRequestLabTests = @"7";

    // Set callback and perform API call
    [self.controller createLabRequestAsyncWithXSessionId: xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId reservationRequestId : reservationRequestId labRequestLabTests : labRequestLabTests  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

//         
-(void) testShowOthers {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    int reservationRequestId = [@"1741" intValue];
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";

    // Set callback and perform API call
    [self.controller getShowOthersAsyncWithReservationRequestId: reservationRequestId xSessionId : xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// Sh    
-(void) testShowDiagnosis {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    int reservationRequestId = [@"1741" intValue];
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";

    // Set callback and perform API call
    [self.controller getShowDiagnosisAsyncWithReservationRequestId: reservationRequestId xSessionId : xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testActiveDrugs {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    int active = [@"1" intValue];
    int patientId = [@"23224" intValue];
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";

    // Set callback and perform API call
    [self.controller getActiveDrugsAsyncWithActive: active patientId : patientId xSessionId : xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testDrugs {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* query = @"FOR";
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";

    // Set callback and perform API call
    [self.controller getDrugsAsyncWithQuery: query xSessionId : xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// create_diagnosis_staging
//    
-(void) testCreateDiagnosisStaging {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";
    NSString* reservationRequestId = @"1741";
    NSString* value = @"koko wawaw";

    // Set callback and perform API call
    [self.controller createDiagnosisStagingAsyncWithXSessionId: xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId reservationRequestId : reservationRequestId value : value  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testListRadiologyRequest {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";

    // Set callback and perform API call
    [self.controller listRadiologyRequestAsyncWithXSessionId: xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testCreateOthers {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* reservationRequestId = @"10";
    NSString* value = @"test";

    // Set callback and perform API call
    [self.controller createOthersAsyncWithReservationRequestId: reservationRequestId value : value  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testListRadiologyScans {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";

    // Set callback and perform API call
    [self.controller listRadiologyScansAsyncWithXSessionId: xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testListLabTests {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";

    // Set callback and perform API call
    [self.controller listLabTestsAsyncWithXSessionId: xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testCreateDiagnosis {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* reservationRequestId = @"10";
    NSString* value = @"test";

    // Set callback and perform API call
    [self.controller createDiagnosisAsyncWithReservationRequestId: reservationRequestId value : value  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// TODO: Add Description    
-(void) testDiscontinuePrescriptionDrug {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSString* xSessionId = @"{{session_id}}";
    NSString* xAuthenticationToken = @"{{token}}";
    NSString* xAppId = @"doctor_app";

    // Set callback and perform API call
    [self.controller updateDiscontinuePrescriptionDrugAsyncWithXSessionId: xSessionId xAuthenticationToken : xAuthenticationToken xAppId : xAppId  completionBlock:^(BOOL success, HttpContext* context, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}



@end
